name: "Release2"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The release tag. Must follow Rust versioning conventions, e.g. "0.0.0"'
        required: true

env:
  RELEASE_BRANCH_NAME: release/${{ inputs.tag }}

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          if [[ "${{ inputs.tag }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "OK";
          else
            echo "Invalid tag format. Given: ${{ inputs.tag }}";
            exit 1;
          fi
      - uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: |
            ${{ secrets.MAMORU_CORE_KEY }}
            ${{ secrets.VALIDATION_CHAIN_KEY }}
      - uses: actions/checkout@v4
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/init-git-user
      - uses: taiki-e/create-gh-release-action@v1
        with:
          branch: main
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_BRANCH_NAME }}
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: ...
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}